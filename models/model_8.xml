<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
// Place global declarations here.


const int munkaszam = 3;//25;
const int gepszam = 4;
typedef int[0, munkaszam-1] munka_id;
typedef int[0, gepszam-1] gep_id;


const int munkaido2[25][gepszam] = 
{
{1538, -1, -1, 1194},
{1500, -1, -1, 789},
{1607, -1, -1, 818},
{-1, -1, 1564, 2143},
{-1, -1, 736, 1017},
{5263, -1, -1, 3214},
{4865, -1, 3025, 3214},
{-1, -1, 1500, 1440},
{-1, -1, 1869, 2459},
{-1, 1282, -1, -1},
{-1, 3750, -1, 3000},
{-1, 6796, 7000, 5600},
{11250, -1, -1, 6716},
{2632, -1, -1, 1527},
{5000, -1, -1, 2985},
{1250, -1, -1, 783},
{4474, -1, -1, 3036},
{-1, 1492, -1, -1},
{-1, 3130, -1, 2687},
{2424, -1, 1074, 1600},
{7317, -1, 3614, -1},
{-1, -1, 864, -1},
{-1, -1, 3624, -1},
{-1, -1, 2667, 4000},
{5952, -1, 3448, 4902}
};

const int atallasi_ido[20][20] = 
{
{0, 300, 800, 1500, 600, 500, 2000, 1100, 0, 0, 500, 1000, 200, 800, 700, 500, 1800, 0, 2500, 300},
{200, 0, 1300, 900, 2500, 200, 800, 2500, 400, 0, 600, 2500, 500, 200, 600, 0, 1100, 0, 800, 2500},
{500, 900, 0, 500, 700, 400, 1500, 400, 900, 0, 200, 1500, 800, 700, 0, 2000, 600, 0, 500, 1300},
{1100, 700, 200, 0, 800, 2000, 900, 0, 1300, 0, 1500, 1000, 1800, 600, 1300, 600, 1500, 0, 1000, 500},
{500, 1000, 0, 1300, 0, 500, 2000, 1300, 900, 0, 400, 300, 2000, 1000, 2000, 700, 200, 0, 300, 900},
{200, 0, 1300, 1000, 1000, 0, 700, 1300, 800, 0, 700, 600, 500, 700, 500, 2000, 900, 0, 1100, 500},
{900, 500, 1100, 0, 1400, 600, 0, 4000, 500, 0, 500, 800, 300, 400, 1100, 500, 1500, 0, 900, 1500},
{1500, 2000, 400, 1300, 500, 900, 700, 0, 900, 0, 400, 1800, 600, 1500, 600, 500, 700, 0, 900, 1100},
{2500, 600, 500, 800, 600, 1800, 600, 200, 0, 0, 2000, 1500, 2000, 0, 600, 900, 1300, 1800, 700, 800},
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1000, 1300, 0, 0, 0, 0, 0, 0, 800, 0},
{800, 1000, 1300, 800, 1100, 400, 2500, 900, 2000, 0, 0, 800, 1000, 2500, 1500, 600, 800, 2500, 1300, 600},
{200, 700, 600, 300, 900, 300, 500, 200, 400, 400, 200, 0, 2000, 1100, 900, 200, 2000, 0, 600, 500},
{900, 800, 1300, 1100, 1300, 600, 400, 1500, 500, 0, 400, 1800, 0, 0, 1800, 800, 600, 0, 2500, 1000},
{1800, 1500, 2000, 1500, 400, 2500, 500, 500, 1100, 0, 600, 1500, 800, 0, 500, 500, 0, 0, 1100, 1500},
{1500, 900, 1300, 900, 600, 100, 200, 1100, 300, 0, 1300, 500, 400, 600, 0, 1300, 1000, 0, 1300, 1000},
{1300, 2000, 1500, 500, 400, 900, 1800, 600, 700, 0, 1500, 2000, 600, 400, 800, 0, 900, 0, 500, 200},
{700, 700, 900, 800, 1400, 600, 800, 1000, 600, 0, 900, 400, 500, 900, 2000, 1300, 0, 0, 700, 1100},
{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 1300, 0, 0, 0, 0, 0, 0, 1300, 0},
{600, 500, 1100, 500, 400, 1400, 900, 400, 600, 400, 2500, 0, 700, 700, 500, 1300, 700, 200, 0, 2000},
{700, 500, 2000, 1400, 0, 1100, 500, 600, 1400, 2000, 400, 900, 2000, 800, 700, 300, 500, 0, 800, 0}
};

int minTime(munka_id mid){
  int toReturn=9999;
  for(gid: gep_id) {
    if(munkaido2[mid][gid] != -1 &amp;&amp; munkaido2[mid][gid]&lt;toReturn) toReturn = munkaido2[mid][gid];
  }
return toReturn;
}

int[-1,munkaszam-1] gallapot[gepszam]={-1,-1,-1,-1};
int[0,2] jallapot[munkaszam]={0,0,0};

const int hatarido[25] = {15000, 30000, 22000, 25000, 20000, 30000, 21000, 26000, 30000, 29000, 30000, 21000, 30000, 25000, 24000, 30000, 30000, 30000, 13000, 19000, 30000, 20000, 12000, 30000, 17000};

const int beallasido[gepszam] = {180, 175, 0, 237};

clock time;
clock c[gep_id];

int[0,munkaszam] todo = munkaszam;

</declaration><template><name>P0</name><declaration>int ktg=-1;
</declaration><location id="id0" x="-392" y="-80"></location><transition><source ref="id0"/><target ref="id0"/><label kind="select" x="-208" y="8">j: munka_id</label><label kind="guard" x="-240" y="32">time==hatarido[j] &amp;&amp; jallapot[j]==1</label><label kind="assignment" x="-224" y="48">jallapot[j]=2, ktg==1, todo--</label><nail x="-248" y="88"/><nail x="-264" y="104"/></transition><transition><source ref="id0"/><target ref="id0"/><label kind="select" x="-328" y="-328">g: gep_id</label><label kind="guard" x="-392" y="-288">gallapot[g]!=-1 &amp;&amp; c[g]==munkaido2[gallapot[g],g]</label><label kind="assignment" x="-384" y="-264">ktg+=1, jallapot[gallapot[g]]=1, gallapot[g]=-1</label><nail x="-340" y="-234"/><nail x="-212" y="-226"/></transition><transition><source ref="id0"/><target ref="id0"/><label kind="select" x="-912" y="-79">j : munka_id, g: gep_id</label><label kind="guard" x="-912" y="-64">time &lt;= hatarido[j]-munkaido2[j,g] &amp;&amp; jallapot[j]==0 &amp;&amp; gallapot[g]=-1</label><label kind="assignment" x="-912" y="-34">gallapot[g]=j &amp;&amp; c[g]=0</label><nail x="-504" y="-80"/><nail x="-496" y="-224"/></transition></template><system>// Place template instantiations here.


// List one or more processes to be composed into a system.
system Automata, P0;</system></nta>