<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.


const int munkaszam = 5;//25;
const int gepszam = 4;
typedef int[0,munkaszam-1] munka_id;
typedef int[0, gepszam-1] gep_id;

/*const int munkaido[gepszam][munkaszam] = 
{
{1538, 1500, 1607, 1000, 1000, 5263, 4865, 10000, 1000, 1000, 1000, 100000, 11250, 2632, 5000/*, 1250, 4474, 1000, 100000, 2424, 9317, 1000, 1000, 100000, 5952},
{1000, 1000, 1000, 1564, 1000, 5000, 4000, 1000, 1000, 1282, 3750, 6796, 100000, 1000, 100000/*, 1000, 100000, 1492, 3130, 1000, 2000, 3000, 4000, 5000, 6000},
{1000, 1000, 1000, 1564, 736, 5000, 3025, 1500, 1869, 1000, 2000, 7000, 6000, 1000, 100000/*, 10000, 5000, 1000, 3000, 1074, 3614, 864, 3624, 2667, 3448},
{1194, 789, 818, 2143, 1017, 3200, 3214, 1440, 2459, 3000, 3000, 5600, 6716, 1527, 2985/*, 783, 3036, 10000000, 2687, 1600, 100, 1000000, 1000, 4000, 4902}
};*/

const int munkaido2[munkaszam][gepszam] = 
{
{1538, 1000, 1000, 1194},
{1500, 1000, 1000, 789},
{1607, 1000, 1000, 818},
{1000, 1564, 1564, 2143},
{1000, 1000, 736, 1017}/*
{5263, 5000,5000, 3200},
{4865, 4000, 3025, 3214},
{10000, 1000, 1500, 1440},
{1000, 1000, 1869, 2459},
{1000, 1282, 1000, 3000},
{1000, 3750, 2000, 3000},
{10000, 6796, 7000, 5600},
{11250, 100000, 6000, 6716},
{2632, 1000, 1000, 1527},
{5000, 100000, 100000, 2985},
{1250, 1000, 10000, 783},
{4474, 100000, 5000, 3036},
{1000, 1492, 1000, 10000000},
{100000, 3130, 3000, 2687},
{2424, 1000, 1074, 1600},
{9317, 2000, 3614, 100},
{1000, 3000, 864, 1000000},
{1000, 4000, 3624, 1000},
{100000, 5000, 2667, 4000},
{5952, 6000, 3448, 4902}*/
};

const int atallasi_ido[munkaszam][munkaszam] = 
{
{0, 300, 800, 1500, 600},
{200, 0, 1300, 900, 2500},
{500, 900, 0, 500, 700},
{1100, 700, 200, 0, 800},
{500, 1000, 0, 1300, 0}
};

int minTime(munka_id mid){
  int toReturn=9999;
  for(gid: gep_id) {
    if(munkaido2[mid][gid]&lt;toReturn) toReturn = munkaido2[mid][gid];
  }
return toReturn;
}

int[-1,munkaszam-1] elozo[gepszam]={-1,-1,-1,-1};
int[-1,munkaszam-1] aktualis[gepszam]={-1,-1,-1,-1};

const int hatarido[munkaszam] = {2000, 2000, 2000, 2000, 2000/*, 300, 210, 260, 300, 209, 300, 210, 300, 250, 240/*, 300, 300, 300, 130, 190, 300, 200, 120, 300, 170*/};

const int beallasido[gepszam] = {180, 175, 0, 237};

chan foglal[gepszam];
chan kezdodik[gepszam];
chan elenged[gepszam];

clock time;

int[0,munkaszam] todo = munkaszam;</declaration><template><name x="5" y="5">Gep</name><parameter>const gep_id id</parameter><declaration>// Place local declarations here.
clock t;</declaration><location id="id0" x="168" y="-176"></location><location id="id1" x="-40" y="-176"><committed/></location><location id="id2" x="-344" y="-64"><name x="-376" y="-96">Kikapcsolt</name></location><location id="id3" x="168" y="-64"><name x="184" y="-80">Dolgozik</name></location><location id="id4" x="-128" y="-64"><name x="-208" y="-96">Bekapcsolt</name></location><init ref="id2"/><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="8" y="-200">elozo[id]!=-1</label></transition><transition><source ref="id1"/><target ref="id3"/><label kind="guard" x="-32" y="-142">elozo[id]==-1</label><label kind="synchronisation" x="-32" y="-120">kezdodik[id]!</label><nail x="-40" y="-64"/></transition><transition><source ref="id0"/><target ref="id3"/><label kind="guard" x="176" y="-152">t&gt;=atallasi_ido[elozo[id]][aktualis[id]]</label><label kind="synchronisation" x="176" y="-120">kezdodik[id]!</label></transition><transition><source ref="id2"/><target ref="id4"/><label kind="guard" x="-320" y="-56">time &gt;= beallasido[id]</label></transition><transition><source ref="id4"/><target ref="id1"/><label kind="synchronisation" x="-200" y="-168">foglal[id]?</label><label kind="assignment" x="-168" y="-152">t=0</label><nail x="-128" y="-176"/><nail x="-72" y="-176"/><nail x="-56" y="-176"/></transition><transition><source ref="id3"/><target ref="id4"/><label kind="synchronisation" x="-72" y="-8">elenged[id]?</label><label kind="assignment" x="-104" y="8">elozo[id]=aktualis[id]</label><nail x="168" y="-8"/><nail x="-128" y="-8"/></transition></template><template><name>Feladatok</name><parameter>const munka_id id</parameter><declaration>gep_id melyik;
clock ora;
</declaration><location id="id5" x="-96" y="-8"><name x="-320" y="-24">Gep_befoglalva_atallasra_var</name></location><location id="id6" x="-96" y="280"><name x="-192" y="272">Leszallitva</name></location><location id="id7" x="-96" y="192"><name x="-152" y="184">Kesz</name><label kind="invariant" x="-80" y="184">cost' == 1</label></location><location id="id8" x="-96" y="88"><name x="-160" y="80">Munka</name></location><location id="id9" x="-96" y="-152"><name x="-152" y="-160">Start</name><label kind="invariant" x="-72" y="-160">time &lt;= hatarido[id] - minTime(id)</label></location><init ref="id9"/><transition><source ref="id5"/><target ref="id8"/><label kind="synchronisation" x="-88" y="32">kezdodik[melyik]?</label><label kind="assignment" x="-88" y="48">ora=0</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="guard" x="-88" y="224">time == hatarido[id]</label><label kind="assignment" x="-88" y="240">todo--</label></transition><transition><source ref="id8"/><target ref="id7"/><label kind="guard" x="-88" y="120">ora &gt;= munkaido2[id][melyik]</label><label kind="synchronisation" x="-88" y="136">elenged[melyik]!</label></transition><transition><source ref="id9"/><target ref="id5"/><label kind="select" x="-88" y="-120">gid: gep_id</label><label kind="synchronisation" x="-88" y="-96">foglal[gid]!</label><label kind="assignment" x="-88" y="-72">melyik=gid, aktualis[melyik]=id</label></transition></template><system>// Place template instantiations here.


// List one or more processes to be composed into a system.
system Gep, Feladatok;</system></nta>